#[[macro(add_subprojects _base_dir _test_dir)
    # Find all CMakeLists.txt paths
    file(GLOB_RECURSE _cmake_files RELATIVE "${_base_dir}" CMakeLists.txt)
    # Collect all subdirectories containing CMakeLists.txt
    set(_dirs)
    foreach (file_path ${_cmake_files})
        get_filename_component(_dir_path ${file_path} PATH)
        list(APPEND _dirs ${_dir_path})
    endforeach ()

    unset(_cmake_files)
    unset(_dir_path)

    # Add all found directories
    foreach (dir ${_dirs})
        # Ignore CMakeList.txt files from "googletest/*" dirs
        string(FIND "${dir}" ${_test_dir} _out)
        if ("${_out}" EQUAL -1)
            add_subdirectory(${dir})
        endif ()
    endforeach ()
endmacro()

macro(configure_test_target _target_name)
    # Add Google Test libraries to target
    target_link_libraries(${_target_name} gtest gtest_main)

    # Rename learners main function to prevent overloading or name conflicts
    # Add:
    #   #undef main
    # line before custom test main if you use it.
    string(SHA1 _hash _target_name)
    target_compile_definitions(${_target_name} PRIVATE main=gen${_hash}_main)
    unset(_hash)
endmacro()]]#