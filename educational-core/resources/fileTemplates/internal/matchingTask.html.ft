<style>
  ${matching_style}
</style>
<div id='matchingOptions'>
</div>

<script>
  let parentElement = document.getElementById('matchingOptions');
  let options = ${options}
  let captions = ${captions}
  let ordering = ${ordering}

  createLines(captions, options)

  function createLines(captions, options) {
    for (let index = 0; index < ordering.length; index++) {
      let optionIndex = ordering[index]

      let keyElement = createKey(captions[index])
      let valueElement = createValue(index, optionIndex, options)
      parentElement.appendChild(keyElement)
      parentElement.appendChild(valueElement)
    }
  }

  function createKey(caption) {
    let keyPanel = document.createElement('div')
    keyPanel.className = 'key'

    let labelPanel = createKeyLabel(caption)

    keyPanel.appendChild(labelPanel)
    return keyPanel
  }

  function createKeyLabel(caption) {
    let label = document.createElement('label')
    label.innerHTML = caption
    label.className = 'keyLabel'
    return label
  }

  function createValue(index, optionIndex, options) {
    let card = document.createElement('div')
    card.className = 'value'

    let optionTextElement = createValueLabelPanel(options[optionIndex])
    let buttonPanel = createButtonsPanel(index, options)

    card.appendChild(optionTextElement)
    card.appendChild(buttonPanel)

    return card
  }

  function createValueLabelPanel(text) {
    let labelPanel = document.createElement('span')
    labelPanel.className = 'labelPanel'

    let label = document.createElement('label')
    label.innerHTML = text
    label.className = 'valueLabel'

    labelPanel.appendChild(label)
    return labelPanel
  }

  function createButtonsPanel(index, options) {
    let buttonPanel = document.createElement('div')
    buttonPanel.className = 'buttonPanel'

    let upButton = createButton(moveUp, index, true)
    let downButton = createButton(moveDown, index, false)

    if (index === 0) fadeButton(upButton)
    if (index === options.length - 1) fadeButton(downButton)

    buttonPanel.appendChild(upButton)
    buttonPanel.appendChild(downButton)

    return buttonPanel
  }

  function createButton(f, index, isUp) {
    let button = document.createElement('button')
    if (isUp) {
      button.className = "upButton"
      button.innerHTML = `
        <img src="${upButtonIconPath}">
      `
    } else {
      button.className = "downButton"
      button.innerHTML = `
        <img src="${downButtonIconPath}">
      `
    }
    button.addEventListener('click', function (event) {
      f(index)
    })
    return button
  }

  function moveUp(index) {
    let targetIndex = index - 1
    if (targetIndex < 0) return
    swapElements(targetIndex, index)
    task.moveUp(index)
  }

  function moveDown(index) {
    let targetIndex = index + 1
    if (targetIndex >= parentElement.childElementCount) return
    swapElements(index, targetIndex)
    task.moveDown(index)
  }

  function swapElements(i, j) {
    let labeli = parentElement.getElementsByClassName('value')[i].getElementsByTagName('label')[0]
    let labelj = parentElement.getElementsByClassName('value')[j].getElementsByTagName('label')[0]

    let tmp = labeli.innerHTML
    labeli.innerHTML = labelj.innerHTML
    labelj.innerHTML = tmp

    let c = ordering[i]
    ordering[i] = ordering[j]
    ordering[j] = c
  }

  function fadeButton(button) {
    button.disabled = true
    fade(button)
  }

  function fade(element) {
    let opacity = 0.3;
    element.style.opacity = opacity;
    element.style.filter = 'alpha(opacity=' + opacity * 100 + ")";
  }

  function getOrdering() {
    return ordering.join(" ")
  }
</script>