<style>
  ${sorting_based_style}
</style>
<div id='options'>
  <div id='shortcutLabel'><label>${tutorial}</label></div>
  <div id='keyValueGrid'></div>
</div>

<script>
  let keyValueGrid = document.getElementById('keyValueGrid');
  let options = ${options}
  let captions = ${captions}
  let ordering = ${ordering}

  let optionN = options.length

  createLines(captions, options)

  let focusedIndex = 0
  makeFocus(focusedIndex)

  window.addEventListener("blur", function (event) {
    if (focusedIndex !== 0) {
      makeFocus(0)
    } else {
      makeFocus(optionN - 1)
    }
  })

  function createLines(captions, options) {
    for (let index = 0; index < ordering.length; index++) {
      let optionIndex = ordering[index]

      if (captions.length !== 0) {
        let keyElement = createKey(captions[index])
        keyValueGrid.appendChild(keyElement)
      }

      let valueElement = createValue(index, optionIndex, options)
      keyValueGrid.appendChild(valueElement)
    }
  }

  function createKey(caption) {
    let keyPanel = document.createElement('div')
    keyPanel.className = 'key'

    let labelPanel = createKeyLabel(caption)

    keyPanel.appendChild(labelPanel)
    return keyPanel
  }

  function createKeyLabel(caption) {
    let label = document.createElement('label')
    label.innerHTML = caption
    label.className = 'keyLabel'
    return label
  }

  function createValue(index, optionIndex, options) {
    let card = document.createElement('div')
    card.className = 'value'

    let optionTextElement = createValueLabelPanel(options[optionIndex])
    let buttonPanel = createButtonsPanel(index, options)

    card.appendChild(optionTextElement)
    card.appendChild(buttonPanel)

    card.id = getCardId(index)
    card.tabIndex = 0

    card.onclick = function (e) {
      if (e.target === e.currentTarget) {
        makeFocus(index)
      }
    }

    card.onkeydown = function (e) {
      let shiftFlag = e.shiftKey
      switch (e.key) {
        case 'ArrowUp':
          if (index === 0) {
            return false
          }
          if (shiftFlag) {
            move(index, -1)
          } else {
            makeFocus(index - 1)
          }
          return false;
        case 'ArrowDown':
          if (index + 1 === ordering.length) {
            return false
          }
          if (shiftFlag) {
            move(index, 1)
          } else {
            makeFocus(index + 1)
          }
          return false;
      }
    }

    card.addEventListener('focusin', function (event) {
      focusedIndex = index
    })
    return card
  }

  function getCardId(index) {
    return "card-" + index.toString()
  }

  function makeFocus(newIndex) {
    document.getElementById(getCardId(focusedIndex)).blur()
    focusedIndex = newIndex
    document.getElementById(getCardId(focusedIndex)).focus()
  }

  function createValueLabelPanel(text) {
    let labelPanel = document.createElement('span')
    labelPanel.className = 'labelPanel'

    let label = document.createElement('label')
    label.innerHTML = text
    label.className = 'valueLabel'

    labelPanel.appendChild(label)
    return labelPanel
  }

  function createButtonsPanel(index, options) {
    let buttonPanel = document.createElement('div')
    buttonPanel.className = 'buttonPanel'

    let upButton = createButton(index, -1)
    let downButton = createButton(index, 1)

    if (index === 0) fadeButton(upButton)
    if (index === options.length - 1) fadeButton(downButton)

    buttonPanel.appendChild(upButton)
    buttonPanel.appendChild(downButton)

    return buttonPanel
  }

  function createButton(index, delta) {
    let button = document.createElement('button')
    if (delta === -1) {
      button.className = "upButton"
      button.innerHTML = `
        <img src="${upButtonIconPath}">
      `
    } else {
      button.className = "downButton"
      button.innerHTML = `
        <img src="${downButtonIconPath}">
      `
    }
    button.addEventListener('click', function (event) {
      move(index, delta)
    })
    button.tabIndex = -1
    return button
  }

  function move(index, delta) {
    let targetIndex = index + delta
    if (targetIndex < 0 || targetIndex >= optionN) return
    swapElements(targetIndex, index)
    makeFocus(targetIndex)
  }

  function swapElements(i, j) {
    let labeli = keyValueGrid.getElementsByClassName('value')[i].getElementsByTagName('label')[0]
    let labelj = keyValueGrid.getElementsByClassName('value')[j].getElementsByTagName('label')[0]

    let tmp = labeli.innerHTML
    labeli.innerHTML = labelj.innerHTML
    labelj.innerHTML = tmp

    let c = ordering[i]
    ordering[i] = ordering[j]
    ordering[j] = c
  }

  function fadeButton(button) {
    button.disabled = true
    fade(button)
  }

  function fade(element) {
    let opacity = 0.3;
    element.style.opacity = opacity;
    element.style.filter = 'alpha(opacity=' + opacity * 100 + ")";
  }

  function getOrdering() {
    return ordering.join(" ")
  }
</script>