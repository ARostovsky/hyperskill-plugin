<style>
  ${choice_options_style}
</style>
<div id='choiceOptions'>
  <div class="text">${text}</div>
</div>
<script>
  var parentElement = document.getElementById('choiceOptions');
  var inputType = getInputType(${is_multiple_choice});
  var choice_options = ${choice_options};
  var selectedVariants = ${selected_variants};
  var isDisabled = ${is_disabled}
  createCheckboxes(choice_options);

  function createCheckboxes(options) {
    let optionsWrapper = document.createElement('div')
    optionsWrapper.className = 'optionsBox'
    for (let count in options) { //make sure that order is preserved
      optionsWrapper.appendChild(createButtonBox(count))
      optionsWrapper.appendChild(createLabelBox(count, options))
    }
    parentElement.appendChild(optionsWrapper)
  }

  function createButtonBox(count) {
    let buttonWrapper = document.createElement('div')
    buttonWrapper.className = 'buttonBox'
    buttonWrapper.appendChild(createButton(count))
    return buttonWrapper
  }

  function createButton(count) {
    let inputElement = document.createElement('input');
    inputElement.type = inputType;
    inputElement.name = inputType; //should be the same for radioButtons to be single choice
    inputElement.id = count; // need unique Ids
    inputElement.value = count;
    if (selectedVariants.includes(parseInt(count))) {
      inputElement.checked = true;
    }
    inputElement.addEventListener('change', function (event) {
      addSelectionListener(this)
    })
    if (isDisabled) {
      inputElement.className = inputType + " disable"
      inputElement.disabled = true;
    }
    else {
      inputElement.className = inputType
    }
    return inputElement
  }

  function createLabelBox(count, options) {
    let labelWrapper = document.createElement('div')
    labelWrapper.className = 'labelBox'
    labelWrapper.appendChild(createLabel(count, options))
    return labelWrapper
  }

  function createLabel(count, options) {
    let label = document.createElement('label')
    label.htmlFor = count;
    label.innerHTML = options[count];
    if (isDisabled) {
      fade(label)
    }
    return label
  }

  function addSelectionListener(element) {
    if (element.type === 'checkbox') {
      createCheckboxListener(element)
    }
    else {
      createRadioButtonListener(element)
    }
  }

  function createCheckboxListener(element) {
    var id = element.id
    if (element.checked) {
      task.addSelectedVariant(id);
    }
    else {
      task.removeSelectedVariant(id);
    }
  }

  function createRadioButtonListener(element) {
    task.clearSelectedVariants();
    task.addSelectedVariant(element.id);
  }

  function getInputType(isMultipleChoice) {
    var type;
    if (isMultipleChoice) {
      type = 'checkbox';
    }
    else {
      type = 'radio';
    }
    return type;
  }

  function fade(element) {
    let opacity = 0.5;
    element.style.opacity = opacity;
    element.style.filter = 'alpha(opacity=' + opacity * 100 + ")";
  }

  function getSelectedVariants() {
    let htmlCollection = document.getElementsByTagName('input');
    let checkedItems = [].slice.call(htmlCollection).filter(it => it.checked);
    return checkedItems.map(it => it.id).join();
  }
</script>